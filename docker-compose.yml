version: '3.9'
services:
  app:
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
    build: .
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - postgresdb
    networks:
      - learning

  postgresdb: #decare the postgres container is ip a services connection
    image: postgres:latest
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    volumes:
      - postgresdb:/var/lib/postgresql/data
    ports:
      - '${DB_EXPOSE_PORT}:${DB_PORT}' # external:internal connect
    networks:
      - learning

  pgadmin:
      image: dpage/pgadmin4
      environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      ports:
        - '${PGADMIN_PORT}:80'
      depends_on:
        - postgresdb
      links:
        - postgresdb
      networks:
      - learning


volumes:
  postgresdb:
  app:


# Networks to be created to facilitate communication between containers
networks:
  learning:
    driver: bridge